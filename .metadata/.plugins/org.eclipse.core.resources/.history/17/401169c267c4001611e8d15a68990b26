function TablePage() {
	this.name = "table-page";
	this.pageContainer = this.table = Dom.newDOMElement({
		_name : "hbox",
		id : "pageContainer"
	});
	var thiz = this;
	var callback = function(htmlText) {
		thiz.pageContainer.innerHTML = htmlText;
		thiz.init();
	}
	serverReport.getHTML("/getTablePage.do", "GET", callback);
}

TablePage.prototype.init = function(){
	var thiz = this;
	this.containerPanel = this.pageContainer.querySelector("#container-panel");
	var theader = new Array("id", "room", "floor", "capacity", "description",
			"priority", "onDesk");
	this.table = new Table();
	this.table.init(theader);
	this.containerPanel.appendChild(this.table.getTable());
	this.searchButton = this.pageContainer.querySelector("#search-button");
	this.searchButton.addEventListener("click", function(ev) {
		var f = this.pageContainer.querySelector("#floor");
		var r = this.pageContainer.querySelector("#room");
		var c = this.pageContainer.querySelector("#capacity");
		var o = this.pageContainer.querySelector("#onDesk");

		var floor = f.options[f.selectedIndex].value;
		var room = r.options[r.selectedIndex].value;
		var capacity = c.options[c.selectedIndex].value;
		var onDesk = o.options[o.selectedIndex].value;

		console.log("Search button click.... ");

		var callback = function(json) {
			thiz.table.render(json);
		}
		serverReport.getJson("/getTables.do?floor=" + floor + "&room=" + room
				+ "&capacity=" + capacity + "&onDesk=" + onDesk + "", "GET",
				callback);
	}, false);

	this.contextMenu = new ContextMenu();
	this.contextMenu.init([
			{
				name : "Make order",
				handler : function(handleItem) {
					var seat = handleItem.data;
					var order;
					var callback = function(json) {
						order = json;
					};
					serverReport.getJson("/createOrder.do?seatId=" + seat.id
							+ "&note='dklfj'&customerId=123", "GET", callback);
					if (order == null)
						return;
					console.log(order);
				},
				express : function() {
					var o = document.getElementsByClassName("onDesk")[0];
					console.log(o.options[o.selectedIndex].value);
					return o.options[o.selectedIndex].value == "true";
				}
			}, {
				name : "Edit",
				handler : function(handleItem) {

					console.log(handleItem);
				}

			}, {
				name : "View",
				handler : function(handleItem) {
					console.log(handleItem);
				}
			} ]);
	this.table.tableBody.addEventListener("contextmenu", function(e) {
		var target = e.target;
		var dataNode = Dom.findUpward(target, {
			eval : function(n) {
				return n.data;
			}
		});
		if (dataNode != null) {
			e.dataNode = dataNode;
			thiz.contextMenu.toggleMenuOn(e);
		}
	});
}

TablePage.prototype.getPageContainer = function() {
	return this.pageContainer;
}
