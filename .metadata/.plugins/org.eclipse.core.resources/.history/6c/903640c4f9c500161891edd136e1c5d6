function ComboPopup() {
	this.contextMenuClassName = "context-menu";
	this.contextMenuItemClassName = "context-menu__item";
	this.contextMenuLinkClassName = "context-menu__link";
	this.contextMenuActive = "context-menu--active";

	this.taskItemClassName = "task";
	this.taskItemInContext;

	this.clickCoords;
	this.clickCoordsX;
	this.clickCoordsY;

	this.menu = this.menu = Dom.newDOMElement({
		_name : "nav",
		class : "context-menu"
	});
	this.menuItems;
	this.menuState = 0;
	this.menuWidth;
	this.menuHeight;
	this.menuPosition;
	this.menuPositionX;
	this.menuPositionY;

	this.windowWidth;
	this.windowHeight;
	this.flag = false;
	
	this.handleItem;
	this.targetNode;
	
//	this.body = document.getElementById("main-container");
	this.actions={};
}

/*
 * [{name: " ", handler: function}] <nav id="context-menu" class="context-menu">
 * <ul class="context-menu__items"> <li class="context-menu__item"> <a href="#"
 * class="context-menu__link" data-action="View"><i class="fa fa-eye"></i>
 * View Task</a> </li> <li class="context-menu__item"> <a href="#"
 * class="context-menu__link" data-action="Edit"><i class="fa fa-edit"></i>
 * Edit Task</a> </li> <li class="context-menu__item"> <a href="#"
 * class="context-menu__link" data-action="Delete"><i class="fa fa-times"></i>
 * Delete Task</a> </li> </ul> </nav>
 * 
 * 
 */

ComboPopup.prototype.renderItems = function(items) {
	for(var i = 0; i < items.length; i++) {
		var item = items[i];
	}
}

ComboPopup.prototype.getMenu = function() {
	return this.menu;
}

ComboPopup.prototype.toggleMenuOn = function(targetNode) {
	this.positionMenu(targetNode);
//	this.renderItems();
	document.body.appendChild(this.menu);
//	this.handleItem = e.dataNode;
	this.flag = true;
	
}

ComboPopup.prototype.toggleMenuOff = function() {
	document.body.removeChild(this.menu);
}

ComboPopup.prototype.positionMenu = function(targetNode){
	var menu = this.menu;
	
	menu.style.width = targetNode.offsetWidth + "px";
	menu.style.height = "100px";
	menu.style.left = targetNode.offsetLeft + "px";
	menu.style.top = targetNode.offsetTop - 100 + "px";
	
}

